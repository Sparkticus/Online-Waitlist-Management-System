Walter
The Online Waitlist Management System 
Proposed by: Joanna Bi & Lindsey Tang


We would like to propose a database-driven web application that helps professors and students manage class waitlists. Currently, professors are required to manually parse through their emails to extract information from students looking to be on a waitlist.  They would need to keep track of the waitlist order over time. This can be difficult and time-consuming, especially when the volume of students is enormous. It can also frustrating for students to not know their waitlist statuses in time-sensitive circumstances. Thus, we would like to implement an application that would automate the process of waitlisting, as well as bring to users an easy, intuitive interface that allows them to manage their classes.[a]


To this end, we envision a waitlist web application that has several features, namely user authentication, online check-ins, online lotteries, and ideally, course enrollment information in real-time.


With user authentication, both professors and students would have accounts that allow them to interact with their waitlists separately. In particular, students sign up for an account by submitting information about their major/minor, class year[b], and email address. They would then search for the class they would like to be waitlisted for, input a short explanation of about 50 words,  and submit a form that would automatically add them to a waitlist. With the proper authentication, students can view this waitlist anytime and see where they are relative to other students. Professors can also view the waitlist anytime and approve/reject[c] waitlisted students based on information such as class year, major, and the student-given explanation. By making it easier for students to place themselves on waitlists and professors to manage their course waitlists, we hope[d] our application can effectively address waitlisting issues at Wellesley. 


Online check-ins allow professors to gauge the interest of waitlisted students over time. Students would have to periodically confirm their interest to be on the waitlist, and the waitlist updates to reflect the changes in those who no longer wish to be on the waitlist. [e]This feature helps keep track of which students are actually interested in a course, so that professors and students can plan their schedules accordingly. 


Waitlists are listed chronologically by default, but professors can also choose to prioritize students based on class year and major. In cases when the professors cannot make a decision among the remaining waitlisted students, the online lottery feature[f] would assign random values to each waitlisted students and selects at random which students are approved to be in the course.


One of the most unique aspect of our online waitlist system is its  ability to obtain course enrollment information in real-time. By connecting to the live Banner database, students can easily search for and/or select the class they wish to be waitlisted for[g]. 


We have brainstormed other features[h] that may be implemented if we have enough time. One of them is an internal message system[i] that would facilitate communication among users and notify users about important registration dates and waitlist status changes. Another is a community time capsule feature that allows students to post opinions[j] about the classes they have taken and to view opinions of students who have taken the classes before them. There could also be feature that would allow students to create four-year plans[k] given information about the distribution, major, and minor requirements. Lastly, we could extend our application to include a “Course Picker[l]/Scheduler” feature that makes it easier for students to create a  schedule that works with their course preferences and meeting times.


In terms of the technical implementation, the database would include several entities and relationships. There is a user entity with an ISA relation to students (attributes: class, major, username) and professors (attributes: courses) . There are also course and waitlist[m] entities. Our queries include searching the courses table for a certain class and/or department, organizing the waitlist by a desired field, and updating the waitlist based on feedback from student check-ins and activities of professors (ie: accepting/rejecting a student). We have decided to implement this application mostly in Python with any required operations done in MySQL and PHP. For the web interface, we will be using HTML, CSS, and JS/JQ with Ajax. Possible forms include a submission form, which students can use to place themselves on waitlists, and a  sign-up form, which students and professors use to create their unique accounts. Finally, we would like to attract users by providing an easy-to-use and intuitive front-end interface, but we will not neglect the importance of a functional and powerful back-end. 


In terms of sites that are similar to ours, the Wellesley Course Planner is a web application[n] built by Francys Scott and Hannah Bond that helps students create a course schedule that doesn’t overlap in meeting times. This site is partly similar to our site in that it uses online course information from Banner. However, we believe our web application is fundamentally different because our focus is on managing waitlists with course scheduling as a possible add-on, as oppose to the main component. 


We look forward to applying our knowledge and skills gained from CS304 to this exciting project[o]!
[a]excellent! I look forward to having this!
[b]why do you need this?
[c]You might add another option, where a prof could rank someone higher or lower based on the explanation. E.g., I'm going abroad next year, I have to take this now!
[d]me too!
[e]oh, very interesting. I like the idea of gauging interest. Of course, people can game the system, but still, it's a start.
[f]Good. I think lotteries are at least as fair as going strictly first-come, first-served, especially when the margins are seconds or minutes.
[g]Hopefully this is possible.
[h]How will you deal with people "camping" on waitlists, putting themselves on "just in case," and thereby discouraging other people who are, perhaps, more interested and deserving?
[i]the most likely use, I think, would be a prof emailing the list. right?  What else?
[j]Hmm. That sounds like a whole new application.
[k]Yes. Also a whole new application.
[l]You're very ambitious!
[m]You'll want to flesh this out a bit more; it seems kinda vague right now.
[n]nice!
[o]Overall, this is good. I think it's well motivated, and you have some good ideas.  I think you need to be a bit more thorough and concrete about the data, and bit more on the UI.  Also, we should talk sometime about issues raised by courses like CS110 or CS111, where there's a lab, so you have to sign up for two things simultaneously. That's where wait lists really become a nightmare. We can also talk about registration overrides (a faculty task) and stuff like that.  Good work!